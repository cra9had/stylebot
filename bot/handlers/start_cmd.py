from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

from sqlalchemy.ext.asyncio import AsyncSession

from services.gpt import ChatGPT
from bot.db.orm import get_users, get_body
from bot.middlewares.user_exists import UserExistsMiddleware
from bot.states import Measures

chatGpt = ChatGPT()

r = Router()

r.message.middleware(UserExistsMiddleware())

@r.message(Command("start"))
async def start_cmd(message: Message, session: AsyncSession, state: FSMContext):

    user_body = await get_body(session, message.from_user.id)

    if not user_body:
        message_text = '‚úã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø–æ–¥–±–æ—Ä–∞ –æ–¥–µ–∂–¥—ã —Å Wildberries\nüìèü§è –î–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏:'
        kb = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="–í–≤–µ—Å—Ç–∏ —Ä–∞–∑–º–µ—Ä—ã", callback_data='input_sizes')]]
        )
    else:
        message_text = f'‚úã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø–æ–¥–±–æ—Ä–∞ –æ–¥–µ–∂–¥—ã —Å Wildberries\nüìèü§è –¢–≤–æ–∏ —Ä–∞–∑–º–µ—Ä—ã:\n{user_body}:'
        kb = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='go_menu')]]
        )

    await message.answer(
        text=message_text, reply_markup=kb
    )
